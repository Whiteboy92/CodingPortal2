// <auto-generated />
using System;
using CodingPortal2.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodingPortal2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240707195456_soltuionFix")]
    partial class soltuionFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AssignmentGroup", b =>
                {
                    b.Property<int>("AssignmentsInGroupAssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("GroupsGroupId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentsInGroupAssignmentId", "GroupsGroupId");

                    b.HasIndex("GroupsGroupId");

                    b.ToTable("AssignmentGroup");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PathToTests")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProgrammingLanguage")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("UploadFrequency")
                        .HasColumnType("time(6)");

                    b.HasKey("AssignmentId");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GroupId");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Plagiarism", b =>
                {
                    b.Property<int>("PlagiarismId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UserSolutionId")
                        .HasColumnType("int");

                    b.HasKey("PlagiarismId");

                    b.ToTable("Plagiarisms");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.PlagiarismEntry", b =>
                {
                    b.Property<int>("PlagiarismEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Percentage")
                        .HasColumnType("double");

                    b.Property<int>("PlagiarisedSolutionId")
                        .HasColumnType("int");

                    b.Property<int?>("PlagiarismId")
                        .HasColumnType("int");

                    b.HasKey("PlagiarismEntryId");

                    b.HasIndex("PlagiarisedSolutionId");

                    b.HasIndex("PlagiarismId");

                    b.ToTable("PlagiarismEntries");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PermissionLevel")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.UserAssignmentDate", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("AssignmentTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("DeadLineDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("LastUploadDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("TimeToNextUpload")
                        .HasColumnType("time(6)");

                    b.HasKey("UserId", "AssignmentId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("UserAssignmentDates");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.UserAssignmentSolution", b =>
                {
                    b.Property<int>("UserAssignmentSolutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("NoFormatSolution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlagiarismId")
                        .HasColumnType("int");

                    b.Property<string>("Solution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TestPassed")
                        .HasColumnType("int");

                    b.Property<int>("TotalTests")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UploadDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserAssignmentSolutionId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("PlagiarismId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserAssignmentSolutions");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.UserGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("AssignmentGroup", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.Assignment", null)
                        .WithMany()
                        .HasForeignKey("AssignmentsInGroupAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodingPortal2.DbModels.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Assignment", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Group", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.User", "Creator")
                        .WithMany("CreatedGroups")
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.PlagiarismEntry", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.UserAssignmentSolution", "PlagiarisedSolution")
                        .WithMany()
                        .HasForeignKey("PlagiarisedSolutionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CodingPortal2.DbModels.Plagiarism", null)
                        .WithMany("PlagiarismEntries")
                        .HasForeignKey("PlagiarismId");

                    b.Navigation("PlagiarisedSolution");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.User", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.Assignment", null)
                        .WithMany("Users")
                        .HasForeignKey("AssignmentId");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.UserAssignmentDate", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.Assignment", "Assignment")
                        .WithMany("AssignedUsers")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodingPortal2.DbModels.User", "User")
                        .WithMany("AssignedTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.UserAssignmentSolution", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.Assignment", "Assignment")
                        .WithMany("UserSolutions")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodingPortal2.DbModels.Plagiarism", "Plagiarism")
                        .WithOne("UserAssignmentSolution")
                        .HasForeignKey("CodingPortal2.DbModels.UserAssignmentSolution", "PlagiarismId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CodingPortal2.DbModels.User", "User")
                        .WithMany("UserAssignmentSolutions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Plagiarism");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.UserGroup", b =>
                {
                    b.HasOne("CodingPortal2.DbModels.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodingPortal2.DbModels.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Assignment", b =>
                {
                    b.Navigation("AssignedUsers");

                    b.Navigation("UserSolutions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Group", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("CodingPortal2.DbModels.Plagiarism", b =>
                {
                    b.Navigation("PlagiarismEntries");

                    b.Navigation("UserAssignmentSolution")
                        .IsRequired();
                });

            modelBuilder.Entity("CodingPortal2.DbModels.User", b =>
                {
                    b.Navigation("AssignedTasks");

                    b.Navigation("CreatedGroups");

                    b.Navigation("UserAssignmentSolutions");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
