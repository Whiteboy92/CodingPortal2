@page
@using CodingPortal2.DatabaseEnums
@using CodingPortal2.Shared
@model CodingPortal2.Pages.AssignmentCreationModel

@{
Layout = UserHelper.GetLayoutBasedOnPermissionLevel(Model.PermissionLevel);
ViewData["Title"] = "Assignment Creation Form";
}

@if (ViewData["SuccessMessage"] != null)
{
<div class="alert alert-success alert-dismissible fade show" role="alert">
    @ViewData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}

@if (ViewData["ErrorMessage"] != null)
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
    @ViewData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}

<!DOCTYPE html>

<div>
    <form method="post">
        <div class="formDiv">
            <input asp-for="Assignment.Title" class="form-control" placeholder="Enter unique title" id="Assignment_Title" />
            <div id="titleErrorMessage" style="color: red;"></div>
        </div>
        <div class="formDiv">
            <input asp-for="Assignment.TotalPoints" type="number" class="form-control" placeholder="Enter amount of points to earn" />
        </div>
        <div class="formDiv">
            <select asp-for="Assignment.ProgrammingLanguage" asp-items="Html.GetEnumSelectList<ProgrammingLanguage>()" class="form-control">
                <option value="">Select Language</option>
            </select>
        </div>
        <div class="formDiv d-flex align-items-center">
            <div>
                <label>Upload Frequency&nbsp;</label>
            </div>
            <div class="input-group" style="width: 18%; min-width: 360px">
                <input asp-for="Assignment.UploadFrequency.Days" id="Days" name="Days" type="number" class="form-control" placeholder="Days" min="0" max="365" />
                <input asp-for="Assignment.UploadFrequency.Hours" id="Hours" name="Hours" type="number" class="form-control" placeholder="Hours" min="0" max="8000"/>
                <input asp-for="Assignment.UploadFrequency.Minutes" id="Minutes" name="Minutes" type="number" class="form-control" placeholder="Minutes" min="0" max="500000"/>
            </div>
        </div>
        <div class="formDiv">
            <textarea id="summernote"></textarea>
            <input type="hidden" asp-for="Assignment.Content" id="Assignment_Content"/>
        </div>
        <div class="formDiv">
            <input asp-for="Assignment.PathToTests" name="PathToTests" type="text" class="form-control" placeholder="Path to tests folder"/>
        </div>
        <div align="right" style="margin-right: 1%">
            <button class="btn btn-primary" id="CreateButton" type="submit" name="action" value="CreateAssignment" disabled>Create</button>
        </div>
    </form>
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.js"></script>

<script>
    $(document).ready(function() {
        $('#summernote').summernote({
            height: 380,
            tabsize: 2,
            placeholder: 'Enter content here... formatting priests',
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'italic', 'underline', 'clear']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ],
            callbacks: {
                onChange: function(contents, $editable) {
                    $('#Assignment_Content').val(contents);
                    enableCreateButton();
                }
            }
        });

        const form = document.querySelector('form');
        const title = document.querySelector('#Assignment_Title');
        const totalPoints = document.querySelector('#Assignment_TotalPoints');
        const language = document.querySelector('#Assignment_ProgrammingLanguage');
        const pathToTests = document.querySelector('#Assignment_PathToTests');
        const createButton = document.getElementById('CreateButton');
        const daysInput = document.getElementById("Days");
        const hoursInput = document.getElementById("Hours");
        const minutesInput = document.getElementById("Minutes");
        const errorMessage = document.getElementById('titleErrorMessage');
        const hiddenContentInput = document.getElementById('Assignment_Content');

        enableCreateButton();

        async function checkTitleExists(title) {
            const response = await fetch(`/AssignmentCreation?handler=CheckTitleExists&title=${title}`, { method: 'GET' });
            const data = await response.json();

            if (data.exists) {
                errorMessage.textContent = 'Assignment with this title already exists!';
                createButton.disabled = true;
            } else {
                errorMessage.textContent = '';
                enableCreateButton();
            }
        }

        function enableCreateButton() {
            let hours = parseInt(hoursInput.value) || 0;
            let minutes = parseInt(minutesInput.value) || 0;
            let days = parseInt(daysInput.value) || 0;

            if (daysInput.value >= 365) { daysInput.value = "365"; }
            if (daysInput.value === "0") { daysInput.value = ""; }
            if (hoursInput.value === "0") { hoursInput.value = ""; }
            if (minutesInput.value === "0") { minutesInput.value = ""; }
            if (totalPoints.value === "0") { totalPoints.value = ""; }

            createButton.disabled = (hours === 0 && minutes === 0 && days === 0) ||
                title.value === '' ||
                totalPoints.value === '' ||
                language.value === 'Select Language' ||
                pathToTests.value === '';
        }

        daysInput.addEventListener('input', enableCreateButton);
        hoursInput.addEventListener('input', enableCreateButton);
        minutesInput.addEventListener('input', enableCreateButton);
        totalPoints.addEventListener('input', enableCreateButton);
        language.addEventListener('change', enableCreateButton);
        title.addEventListener('input', function () { checkTitleExists(this.value); });
        pathToTests.addEventListener('input', enableCreateButton);

        checkTitleExists(title.value);
    });
</script>

<style>
    .formDiv {
        margin: 1%;
    }
</style>
